{"version":3,"file":"static/js/463.6c44a86e.chunk.js","mappings":"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","sources":["components/Contact/ContactItem/helpers/settingsAnimation.js","redux/contacts/contactSelectors.js","hooks/useContacts.js","components/Contact/Filter/Filter.style.jsx","components/Contact/Filter/Filter.jsx","hooks/useVisibleItem.js","components/Contact/ContactItem/ContactItem.styled.jsx","components/Contact/ContactItem/ContactItem.jsx","components/Contact/Loader/Loader.jsx","components/Contact/ContactList/ContactList.style.jsx","components/Contact/ContactList/ContactList.jsx","components/Contact/ContactForm/ContactForm.styled.jsx","components/Contact/ContactForm/ContactForm.jsx","pages/ContactsPage.js"],"sourcesContent":["export const pageVariants = {\n  initial: {\n    opacity: 0,\n    x: '-100vw',\n    scale: 0.5,\n  },\n  in: {\n    opacity: 1,\n    x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: 0,\n    x: '100vw',\n    scale: 0.5,\n  },\n};\n\nexport const pageTransition = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: 0.75,\n};\n\nexport const listItemVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      opacity: 1,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -100,\n  },\n};\n","const getFilter = state => state.filter.value;\n\nconst contactSelectors = {\n  getFilter,\n};\n\nexport default contactSelectors;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport contactSelectors from 'redux/contacts/contactSelectors';\n\nimport { useFetchContactsQuery } from 'services/phoneBookApi';\n\nconst useContacts = () => {\n  const filter = useSelector(contactSelectors.getFilter);\n\n  const selectFilteredContacts = useMemo(() => {\n    return createSelector(\n      [response => response.data, (_, filter) => filter],\n      (contacts, filter) => {\n        return (\n          contacts?.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          ) ?? []\n        );\n      }\n    );\n  }, []);\n\n  return useFetchContactsQuery(undefined, {\n    selectFromResult(result) {\n      return {\n        ...result,\n        filteredContacts: selectFilteredContacts(result, filter),\n      };\n    },\n  });\n};\n\nexport default useContacts;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n  background: transparent;\n  width: 300px;\n  padding: 1em;\n  margin-bottom: 2em;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 5000px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  font-family: Montserrat, sans-serif;\n  font-weight: 500;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport contactSelectors from 'redux/contacts/contactSelectors';\n\nimport { Label, Input } from './Filter.style';\n\nconst Filter = () => {\n  const filter = useSelector(contactSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={onFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useVisibleItem = () => {\n  const [isVisible, setVisible] = useState(true);\n\n  const handleVisible = event => {\n    if (event.target.tagName === 'BUTTON') {\n      setVisible(!isVisible);\n    }\n    return toast.info(`Contact deleted from your 📱`);\n  };\n\n  return [isVisible, handleVisible];\n};\n\nexport default useVisibleItem;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 5px 0;\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.2);\n\n  &:last-child {\n    margin-bottom: 0;\n    border: 0;\n  }\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  margin-left: 10px;\n  background: transparent;\n  border: 1px solid #3d3d3d;\n  border-radius: 5px;\n  font-size: 11px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  margin-bottom: 10px;\n`;\n","import { useDeleteContactMutation } from 'services/phoneBookApi';\nimport PropTypes from 'prop-types';\n\nimport useVisibleItem from 'hooks/useVisibleItem';\n\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { listItemVariants } from './helpers/settingsAnimation';\nimport { Button } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [isVisible, handleVisible] = useVisibleItem();\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.li\n          variants={listItemVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hidden\"\n          onClick={handleVisible}\n          key={id}\n        >\n          <p>\n            <b>{name}</b>: {number}\n          </p>\n          <Button type=\"button\" onClick={() => deleteContact(id)}>\n            Delete\n          </Button>\n        </motion.li>\n      )}\n    </AnimatePresence>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { PulseLoader } from 'react-spinners';\n\nconst Loader = () => {\n  return <PulseLoader size={5} height={10} color={'#ffffff80'} />;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: auto;\n`;\n","import { useMemo } from 'react';\n\nimport useContacts from 'hooks/useContacts.js';\n\nimport Filter from '../Filter';\nimport ContactItem from '../ContactItem/ContactItem';\nimport Loader from '../Loader/Loader';\nimport { List } from './ContactList.style';\n\nconst ContactList = () => {\n  const { filteredContacts, isLoading, isSuccess } = useContacts();\n\n  const contactsSum = filteredContacts?.length;\n\n  const sortContactsById = useMemo(() => {\n    return [...filteredContacts].sort((a, b) => b.id - a.id);\n  }, [filteredContacts]);\n\n  return (\n    <>\n      <Filter />\n\n      {!contactsSum ? (\n        <p>Phonebook is empty.</p>\n      ) : (\n        <p>Contacts: {contactsSum}</p>\n      )}\n\n      {isLoading && <Loader />}\n\n      {isSuccess && (\n        <List>\n          {sortContactsById.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  width: 550px;\n  align-items: center;\n  display: inline-flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\nexport const Input = styled.input`\n  margin-top: 3px;\n  background: transparent;\n  width: 500px;\n  padding: 1em;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 5000px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  font-family: Montserrat, sans-serif;\n  font-weight: 500;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  outline: none;\n\n  &:focus,\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &::placeholder {\n    font-size: 15px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 14px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 15px;\n  cursor: pointer;\n  background: transparent;\n  width: 150px;\n  padding: 1em;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 5000px;\n  -webkit-backdrop-filter: blur(5px);\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgb(0 0 0 / 20%);\n  font-family: Montserrat, sans-serif;\n  font-weight: 500;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgb(0 0 0 / 20%);\n\n  &:focus,\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import { useMemo } from 'react';\n\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'services/phoneBookApi';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Wrapper, Input, Label, Span, Button } from './ContactForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .required('This field is Required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number is not valid'\n    ),\n});\n\nfunction ContactForm() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit: async ({ name, number }, { resetForm }) => {\n      resetForm();\n      try {\n        if (alreadyInContacts) {\n          return toast.warn(`${name} is already in 📱`);\n        } else {\n          await addContact({ name, number });\n          return toast.success(`${name} added in your 📱`);\n        }\n      } catch (error) {\n        console.log(error);\n        return toast.error('Ooops..., something went wrong, try again later');\n      }\n    },\n    validationSchema: schema,\n  });\n\n  const { name } = formik.values;\n\n  const alreadyInContacts = useMemo(() => {\n    return contacts?.find(contact => contact.name === name);\n  }, [contacts, name]);\n\n  return (\n    <Wrapper onSubmit={formik.handleSubmit}>\n      <Label>\n        <Span>First Name</Span>\n        <Input\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n      </Label>\n      <Label>\n        <Span>Phone Number</Span>\n        <Input\n          name=\"number\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n      </Label>\n\n      <Button type=\"submit\"> {isLoading ? <Loader /> : 'Add contact'} </Button>\n    </Wrapper>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector } from 'react-redux';\n\nimport { motion } from 'framer-motion';\nimport { pageVariants } from '../components/Contact/ContactItem/helpers/settingsAnimation';\nimport { pageTransition } from '../components/Contact/ContactItem/helpers/settingsAnimation';\n\nimport ContactList from 'components/Contact/ContactList/ContactList';\nimport ContactForm from 'components/Contact/ContactForm/ContactForm';\n\nimport contactSelectors from 'redux/contacts/contactSelectors';\n\nfunction ContactsPage() {\n  const isLoading = useSelector(contactSelectors.getFilter);\n\n  return (\n    <>\n      <motion.div\n        animate=\"in\"\n        initial=\"initial\"\n        exit=\"out\"\n        variants={pageVariants}\n        transition={pageTransition}\n      >\n        <h1>Add new contact</h1>\n        <ContactForm />\n      </motion.div>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <motion.div\n        animate=\"in\"\n        initial=\"initial\"\n        exit=\"out\"\n        variants={pageVariants}\n        transition={pageTransition}\n      >\n        <h2>Find contact by name</h2>\n        {<ContactList />}\n      </motion.div>\n    </>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["pageVariants","initial","opacity","x","scale","in","out","pageTransition","type","ease","duration","listItemVariants","visible","transition","hidden","getFilter","state","filter","value","useSelector","contactSelectors","selectFilteredContacts","useMemo","createSelector","response","data","_","contacts","contact","name","toLowerCase","includes","useFetchContactsQuery","undefined","selectFromResult","result","filteredContacts","Label","styled","Input","dispatch","useDispatch","onChange","event","changeFilter","target","useState","isVisible","setVisible","tagName","toast","Button","id","number","useDeleteContactMutation","deleteContact","useVisibleItem","handleVisible","AnimatePresence","motion","variants","animate","exit","onClick","PulseLoader","size","height","color","List","useContacts","isLoading","isSuccess","contactsSum","length","sortContactsById","sort","a","b","map","Wrapper","Span","schema","Yup","shape","min","max","required","matches","useAddContactMutation","addContact","formik","useFormik","initialValues","onSubmit","resetForm","alreadyInContacts","console","log","validationSchema","values","find","handleSubmit","handleChange","pattern","title","placeholder"],"sourceRoot":""}
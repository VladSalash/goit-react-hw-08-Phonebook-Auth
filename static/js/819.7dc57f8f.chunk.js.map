{"version":3,"file":"static/js/819.7dc57f8f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/style-value-types/dist/es/utils.mjs","../node_modules/style-value-types/dist/es/numbers/units.mjs","../node_modules/style-value-types/dist/es/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.19\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","useEffect","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","assign","number","alpha","scale","default","int","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","env","warnOnce","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","useUnmountEffect","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","duration","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","delay","timeout","performance","now","checkElapsed","elapsed","timestamp","cancelSync","sync","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","splice","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","getFrameData","inertia","finalTarget","potentialUnitType","controls","cancelDelay","delayBy","isZeroValueString","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","add","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}
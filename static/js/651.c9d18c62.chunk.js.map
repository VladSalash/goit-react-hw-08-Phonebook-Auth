{"version":3,"file":"static/js/651.c9d18c62.chunk.js","mappings":"wNAAO,IAAMA,EAAe,CAC1BC,QAAS,CACPC,QAAS,EACTC,EAAG,SACHC,MAAO,IAETC,GAAI,CACFH,QAAS,EACTC,EAAG,EACHC,MAAO,GAETE,IAAK,CACHJ,QAAS,EACTC,EAAG,QACHC,MAAO,KAIEG,EAAiB,CAC5BC,KAAM,QACNC,KAAM,aACNC,SAAU,KAGCC,EAAmB,CAC9BC,QAAS,CACPV,QAAS,EACTC,EAAG,EACHU,WAAY,CACVX,QAAS,IAGbY,OAAQ,CACNZ,QAAS,EACTC,GAAI,K,8CCvBR,IATwB,WACtB,OAAwBY,EAAAA,EAAAA,UAAS,YAAjC,eAAOP,EAAP,KAAaQ,EAAb,KAKA,MAAO,CAACR,EAHqB,WACLQ,EAAb,aAATR,EAA8B,OAAkB,WACjD,EAEF,C,iRCPYS,EAAOC,EAAAA,GAAAA,KAAH,yCAIJC,EAAQD,EAAAA,GAAAA,MAAH,6F,SCeZE,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAGDI,EAAa,WACxB,OAAqCC,EAAAA,EAAAA,KAArC,eAAOrB,EAAP,KAAasB,EAAb,KACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbd,MAAO,GACPE,SAAU,IAEZa,SAAS,WAAD,wBAAE,sGAASf,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAcc,EAA9B,EAA8BA,UAA9B,kBAEiBP,EAAW,CAAET,MAAAA,EAAOE,SAAAA,IAFrC,gBAEEe,EAFF,EAEEA,KACRP,GAASQ,EAAAA,EAAAA,IAAOD,IAHV,kDAKNE,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,4BANN,QAQRL,IARQ,0DAAF,qDAAC,GAUTM,iBAAkBzB,IAGpB,EAA4Be,EAAOW,OAA3BvB,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAQf,OACE,UAACsB,EAAA,MAAD,CACEC,QAAQ,KACR/C,QAAQ,UACRgD,KAAK,MACLC,SAAUlD,EAAAA,GACVa,WAAYN,EAAAA,GALd,WAOE,SAAC,MAAD,KACA,qCACA,UAACU,EAAD,CAAMqB,SAAUH,EAAOgB,aAAcC,aAAa,MAAlD,WACE,UAACjC,EAAD,oBAEE,kBACEX,KAAK,QACL6C,KAAK,QACLC,MAAOnB,EAAOW,OAAOvB,MACrBgC,SAAUpB,EAAOqB,aACjBC,YAAY,cAGhB,UAACtC,EAAD,uBAEE,kBACEX,KAAMA,EACN6C,KAAK,WACLC,MAAOnB,EAAOW,OAAOrB,SACrB8B,SAAUpB,EAAOqB,aACjBC,YAAY,cAEd,iBAAMC,QAAS5B,EAAf,SACY,aAATtB,GAAsB,SAAC,MAAD,KAAY,SAAC,MAAD,UAGvC,mBAAQA,KAAK,SAASkD,QAxCR,WAClB,GAAc,KAAVnC,GAA6B,KAAbE,EAClB,OAAOmB,EAAAA,GAAAA,KAAA,gCAEV,EAoCK,mCAGA,kDAEE,SAAC,KAAD,CAASe,GAAG,UAAZ,uCAKT,ECrGc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACjC,EAAD,MAGL,C","sources":["components/Contact/ContactItem/helpers/settingsAnimation.js","hooks/useShowPassword.js","components/SignInForm/SignInForm.styled.js","components/SignInForm/SignInForm.js","pages/SignInPage.js"],"sourcesContent":["export const pageVariants = {\n  initial: {\n    opacity: 0,\n    x: '-100vw',\n    scale: 0.5,\n  },\n  in: {\n    opacity: 1,\n    x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: 0,\n    x: '100vw',\n    scale: 0.5,\n  },\n};\n\nexport const pageTransition = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: 0.75,\n};\n\nexport const listItemVariants = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      opacity: 1,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -100,\n  },\n};\n","import { useState } from 'react';\n\nconst useShowPassword = () => {\n  const [type, setType] = useState('password');\n\n  const handlePasswordToggle = () => {\n    type === 'password' ? setType('text') : setType('password');\n  };\n  return [type, handlePasswordToggle];\n};\n\nexport default useShowPassword;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { useSignInUserMutation } from 'services/phoneBookApi';\nimport useShowPassword from 'hooks/useShowPassword';\nimport { signIn } from 'redux/auth/authSlice';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { motion } from 'framer-motion';\nimport { pageVariants } from '../Contact/ContactItem/helpers/settingsAnimation';\nimport { pageTransition } from '../Contact/ContactItem/helpers/settingsAnimation';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { BsEye } from 'react-icons/bs';\nimport { BsEyeSlash } from 'react-icons/bs';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Label } from './SignInForm.styled';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport const SignInForm = () => {\n  const [type, handlePasswordToggle] = useShowPassword();\n  const [signInUser] = useSignInUserMutation();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: async ({ email, password }, { resetForm }) => {\n      try {\n        const { data } = await signInUser({ email, password });\n        dispatch(signIn(data));\n      } catch (error) {\n        console.log(error);\n        toast.error('Wrong email or password!');\n      }\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const { email, password } = formik.values;\n\n  const handleClick = () => {\n    if (email === '' || password === '') {\n      return toast.info(`Form fields must be completed`);\n    }\n  };\n\n  return (\n    <motion.div\n      animate=\"in\"\n      initial=\"initial\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n    >\n      <FaUserCircle />\n      <h2>Welcome</h2>\n      <Form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <Label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            placeholder=\"Email\"\n          />\n        </Label>\n        <Label>\n          Password\n          <input\n            type={type}\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            placeholder=\"Password\"\n          />\n          <span onClick={handlePasswordToggle}>\n            {type === 'password' ? <BsEye /> : <BsEyeSlash />}\n          </span>\n        </Label>\n        <button type=\"submit\" onClick={handleClick}>\n          Sign in to PhoneBook\n        </button>\n        <p>\n          New to PhoneBook?&nbsp;\n          <NavLink to=\"/signUp\">Create an account</NavLink>\n        </p>\n      </Form>\n    </motion.div>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { SignInForm } from 'components/SignInForm/SignInForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <SignInForm />\n    </div>\n  );\n}\n"],"names":["pageVariants","initial","opacity","x","scale","in","out","pageTransition","type","ease","duration","listItemVariants","visible","transition","hidden","useState","setType","Form","styled","Label","schema","Yup","shape","email","required","password","min","max","SignInForm","useShowPassword","handlePasswordToggle","useSignInUserMutation","signInUser","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","resetForm","data","signIn","console","log","toast","validationSchema","values","motion","animate","exit","variants","handleSubmit","autoComplete","name","value","onChange","handleChange","placeholder","onClick","to","LoginPage","Helmet"],"sourceRoot":""}